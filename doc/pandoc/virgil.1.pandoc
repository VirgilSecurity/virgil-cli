% VIRGIL(1) Virgil Security CLI (1.0.0) | BSD General Commands Manual
% (c) Virgil Security Inc
% August 01, 2015

# NAME

**virgil** -- command line tool for using Virgil Security stack functionality.

# SYNOPSIS

**virgil** *command* [*command_opts*] [*command_args*]

# DESCRIPTION

The **virgil** program is a command line tool for using Virgil Security stack functionality. It can be used to encrypt, decrypt, sign and verify data. Functionality also includes interaction with Virgil Public Keys Service.

# COMMANDS

**private-key-gen**
:   Generate private key with a given parameters. For example:

        virgil private-key-gen -o private.key

**private-key-info**
:   Get public key from the private key. For example:

        virgil private-key-info -i private.key -o public.key

**public-key-add**
:   Register user\[aq]s public key on the Virgil Public Keys service.
If registration successfull confirmation code will be sent to the user. 
 For example:

        virgil public-key-add -i public.key -virgil_pub.key email:user@domain.com

To confirm use **user-data-confirm**.

**user-data-confirm**
:    Send confirmation code to the Virgil Public Keys service. Confirmation code is sent after user's public key registration. For example:

        virgil user-data-confirm -i email:user@domain.com -c E5J8W7

**user-data-reconfirm**
:   Resend confirmation code to the user for given user's identifier. For example:

        virgil user-data-reconfirm -i email:user@domain.com

**public-key-get**
:   Get user's public key from the Virgil Public Keys service. For example:

        virgil public-key-get -o virgil_pub.key email:user@domain.com

**encrypt**
:   Encrypt data for given recipients which can be defined by Virgil Public Keys and by passwords. For example:

        virgil encrypt -i plain.txt -o encrypted.dat email:user@domain.com

**decrypt**
:   Decrypt data for given recipient which can be defined by Virgil Public Key or by password. For example:

        virgil decrypt -i encrypted.dat -o plain.txt -k private.key -r virgil_pub.pk

**sign**
:   Sign data with Private Key. For example:

        virgil sign -i plain.txt -o plain.txt.sign -k user.key

**verify**
:   Verify data with Virgil Public Key. For example:

        virgil verify -i plain.txt -s plain.txt.sign -r key:user.pk
        virgil verify -i plain.txt -s plain.txt.sign -r email:user@domain.com




# SEE ALSO

`virgilkeygen(1)`, `virgilkey2pub(1)`, `virgilkeyreg(1)`, `virgilkeyget(1)`,\
`virgilconfirm(1)`, `virgilreconfirm(1)`,\
`virgilencrypt(1)`, `virgildecrypt(1)`,\
`virgilsign(1)`, `virgilverify(1)`